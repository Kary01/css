div{
  margin: 23px;
}

article p:first-child{
    font-size: 150%;
    font-weight: bold;
}

article p:last-child{
    font-size: 100%;
    font-style: italic;
}

article p::first-line{
    background-color: cadetblue;
}

a:active{ /*Cuando se usa un mouse, la "activación" generalmente comienza cuando el usuario presiona el botón*/
    color: coral;
}

.ckecked input:checked + label{ 
    /*El usuario puede activar este estado marcando/seleccionando un elemento, 
    o desactivándolo desmarcando/deseleccionando el elemento.*/
    font-size: 1.3em;
    color: red;
}

.default input:default + label{
    /*Representa cualquier elemento de formulario que sea el predeterminado 
    entre un grupo de elementos relacionados. */
    color: crimson;
}   

:dir(ltr) { /* coincide con los elementos en función de la direccionalidad del texto contenido en ellos.*/
    background-color: burlywood;
  }
  
:dir(rtl) {
    background-color: powderblue;
  }

  input:disabled { /* representa a cualquier elemento deshabilitado. */
    background: #c3a;
  }

  .box { /* representa cualquier elemento que no tenga hijos. */
    background: pink;
    height: 50px;
    width: 50px;
  }
  
  .box:empty {
    background: gold;
  }

  input:enabled { /* representa cualquier elemento habilitado. */
    color: #000;
  }

  .type p:first-of-type{ /* representa el primer elemento de su tipo entre un grupo de elementos hermanos. */
    color: red;
    font-style: italic;
  }


  #fullscreen:fullscreen {
      /*  representa un elemento que se muestra cuando el navegador está en modo de pantalla completa. */
    padding: 42px;
    background-color: pink;
    border:2px solid #f00;
    font-size: 200%;
  }
  
  #fullscreen:fullscreen > h1 {
    color: red;
  }
  
  #fullscreen:fullscreen > p {
    color: darkred;
  }
  
  #fullscreen:fullscreen > button {
    display: none;
  }

  #focus .red-input:focus{
      border-color: red;
  }

  #focus .blue-input:focus{
      border-color: blue;
  }

  .focus-within form { 
    /* representa un elemento que ha recibido el foco o que contiene 
    un elemento que ha recibido el foco. */
    border: 1px solid;
    color: gray;
    padding: 4px;
  }
  
  .focus-within form:focus-within {
    background: #ff8;
    color: black;
  }
  
  .focus-within input {
    margin: 4px;
  }

  .hover a:hover{
    /*Generalmente se activa cuando el usuario se 
    desplaza sobre un elemento con el cursor*/
    background-color: powderblue;
    transition: background-color .5s;
  }

  .range input:in-range{
    /* representa un elemento <input> cuyo valor actual 
    se encuentra dentro de los límites de rango especificados 
    por los atributos min y max. */
    background-color: aquamarine;
  }

  .range input:out-of-range{
    background-color: crimson;
  }

  input:in-range + label::after {
    content: ' bien.';
  }
  
  input:out-of-range + label::after {
    content: ' fuera de rango!';
  }

  .invalid input:invalid{
    /*representa cualquier elemento <input> u otro elemento 
    <form> cuyos contenidos no se puedan validar.*/
    background-color:  coral;
  }

  .invalid input:valid{
    background-color: chartreuse;
  }

  .table td{
    border: 1px solid black;
  }

  .table td:nth-child(4n){
    /*coincide con uno o más elementos en función 
    de su posición entre un grupo de hermanos.*/
    background-color: cadetblue;
  }
/*Una pseudoclase es un selector que marca 
los elementos que están en un estado específico, 
Tienden a actuar como si hubieras aplicado una 
clase en una parte determinada del documento y, 
a menudo, ayudan a reducir el exceso de clases 
y proporcionan un marcado más flexible y fácil 
de mantener.Comienza con dos puntos (:)*/

/*actúan como si hubieras añadido un elemento HTML 
totalmente nuevo en el marcado, en lugar de haber 
aplicado una clase nueva a los elementos presentes. 
Los pseudoelementos empiezan con un doble signo 
de dos puntos ::.*/